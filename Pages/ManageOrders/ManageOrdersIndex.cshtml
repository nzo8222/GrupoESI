@page
@model GrupoESINuevo.ManageOrdersIndexModel
@Html.AntiForgeryToken()
@{
    ViewData["Title"] = "ManageOrdersIndex";
}

<h1>ManageOrdersIndex</h1>

<h4>Order</h4>
<hr />
@* ID que se manda en el script donde se guardan los nuevos detalles de orden  *@
<label hidden id="labelOrderId">@Model._manageOrdersVM.OrderModel.Id</label>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model._manageOrdersVM.OrderModel.OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model._manageOrdersVM.OrderModel.Direccion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model._manageOrdersVM.OrderModel.Concepto)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Order[0].Service)*@
            </th>
            <th>
                @Html.DisplayNameFor(model => model._manageOrdersVM.OrderModel.EstadoDelPedido)
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>

        <tr>
            <td>
                @Html.DisplayFor(modelItem => Model._manageOrdersVM.OrderModel.OrderDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model._manageOrdersVM.OrderModel.Direccion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model._manageOrdersVM.OrderModel.Concepto)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.Service.Nombre)*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model._manageOrdersVM.OrderModel.EstadoDelPedido)
            </td>
            <td>
                @if (User.IsInRole("Admin"))
                {

                    @*<a asp-page="./EditOrder" asp-route-id="@item.Order.Id">Edit</a>
                        <a asp-page="./DetailsOrder" asp-route-id="@item.Order.Id">Details</a>
                        <a asp-page="./DeleteOrder" asp-route-id="@item.Order.Id">Delete</a>*@
                }
                @if (User.IsInRole("Provider"))
                {
                    @*<a asp-page="../Quotations/CreateQuotation" asp-route-orderDetailsId="@item.Id" class="btn-success">Cotizar</a>*@
                }
            </td>
        </tr>




    </tbody>
</table>
<div class="row">
    <div class="col-md-12">

        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model._manageOrdersVM.ListQuotations[0].Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model._manageOrdersVM.ListQuotations[0].OrderDetailsModel.Cost)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model._manageOrdersVM.ListQuotations[0].OrderDetailsModel.Status)
                    </th>

                    <th>

                    </th>
                    <th>

                    </th>
                    <th>

                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model._manageOrdersVM.ListQuotations)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderDetailsModel.Cost)
                        </td>
                        <td>
                            @if (@item.OrderDetailsModel.Status == 2)
                            {
                                <p>Asignado</p>
                            }
                            @if (@item.OrderDetailsModel.Status == 1)
                            {
                                <p>Rechazado</p>
                            }
                            @if (@item.OrderDetailsModel.Status == 0)
                            {
                                <p>Espera</p>
                            }
                        </td>
                        <td>
                            <a asp-page="../Quotations/CreateQuotation" asp-route-orderDetailsId="@item.OrderDetailsModel.Id" class="btn btn-primary">Ver cotizacion</a>
                        </td>
                        <th>
                            <label class="idQuotation" hidden>@item.Id</label>
                            <label class="idOrder" hidden></label>
                            <label class="idOrderDetails" hidden>@item.OrderDetailsModel.Id</label>
                            <button class="btn btn-success" onclick="assignQuotation('@item.Id', '@item.OrderDetailsModel.Id', '@Model._manageOrdersVM.OrderModel.Id')">Asignar Cotizacion</button>
                        </th>
                        <th>
                            <a class="btn btn-danger" href="/Quotations/DeleteQuotation?orderDetailsId=@item.OrderDetailsModel.Id"><i class="fa fa-trash" aria-hidden="true"></i></a>
                        </th>
                    </tr>
                }
            </tbody>
        </table>


    </div>
</div>
@if (Model._manageOrdersVM.ListServices.Count > 0)
{
    <div class="row">
        <div class="col-md-12">

            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model._manageOrdersVM.ListServices[0].ServiceModel.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model._manageOrdersVM.ListServices[0].ServiceModel.Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model._manageOrdersVM.ListServices[0].ServiceModel.ApplicationUser.CompanyName)
                        </th>
                        <th>
                            <label class="sendQuotation" asp-for="_manageOrdersVM.ListServices[0].sendQuotation"></label>
                        </th>
                    </tr>
                </thead>

                <tbody>

                    @for (int i = 0; i < Model._manageOrdersVM.ListServices.Count; i++)
                    {

                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => Model._manageOrdersVM.ListServices[i].ServiceModel.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model._manageOrdersVM.ListServices[i].ServiceModel.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model._manageOrdersVM.ListServices[i].ServiceModel.ApplicationUser.CompanyName)
                            </td>
                            <td>


                                <label class="IdService" hidden>@Model._manageOrdersVM.ListServices[i].ServiceModel.ID</label>



                                <input asp-for="_manageOrdersVM.ListServices[i].sendQuotation" class="form-control _checkbox" />

                            </td>
                        </tr>
                    }

                </tbody>


            </table>

            <div class="col-sm-7 offset-sm-3">
                <button class="btn btn-primary" id="submit">Mandar Cotizaciones</button>
            </div>
        </div>
    </div>
}
else
{
    <p>No se encontraron servicios</p>
}

@*<div>
    <a asp-page="Index">Back to List</a>
</div>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function assignQuotation(idQuotation, idOrderDetails, orderId) {


            var json = {
                idQuotation: idQuotation,
                idOrderDetails: idOrderDetails
            };
            //console.log(json.idQuottion);
            $.ajax({
                type: "POST",
                url: "/api/ManageOrders/PostAssignQuotation",
                contentType: "application/json",
                datatype: "json",
                data: JSON.stringify(json)
            }).then(() => {
                console.log(this);
                console.log(window);
                window.location.href = "/ManageOrders/ManageOrdersIndex?orderId=" + orderId

            }
            );
            console.log()
        };
        $(function () {
            $('#submit').on('click', function (evt) {
                evt.preventDefault();
                var checkBoxes = document.getElementsByClassName('_checkbox');
                var result = document.getElementsByClassName('IdService');
                var listaIds = {
                    listaIds: ""
                };
                for (var i = 0; i < checkBoxes.length; i++) {
                    if (checkBoxes[i].checked == true) {
                        listaIds.listaIds += result[i].innerText;
                        listaIds.listaIds += ",";
                    }
                }
                listaIds.listaIds = listaIds.listaIds.substring(0, listaIds.listaIds.length - 1);
                console.log(listaIds);
                console.log(checkBoxes);
                console.log(result);
                var _orderId = document.getElementById("labelOrderId");
                console.log(_orderId.innerText);
                var json = {
                    idService: listaIds.listaIds,
                    orderId: _orderId.innerText
                };
                $.ajax({
                    type: "POST",
                    url: "/api/ManageOrders/PostManageOrders",
                    contentType: "application/json",
                    datatype: "json",
                    data: JSON.stringify(json)
                });
            });
        });
    </script>
}
